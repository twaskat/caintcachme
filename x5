<!DOCTYPE html>
<html>
<head>
    <title>Moving Button</title>
    <style>
        body {
            background-color: #800080;
            margin: 0;
            height: 100vh;
            transition: background-color 0.3s ease;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        #movingButton {
            position: absolute;
            width: 100px;
            height: 100px;
            padding: 0;
            background-color: #39FF14;
            color: black;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.5s ease;
            text-shadow: 0 0 5px rgba(57, 255, 20, 0.5);
            box-shadow: 0 0 15px rgba(57, 255, 20, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            font-weight: bold;
        }

        #score {
            position: fixed;
            top: 20px;
            right: 20px;
            color: white;
            font-size: 24px;
            font-family: Arial, sans-serif;
        }

        #gameArea {
            width: 60%;
            height: 60%;
            position: relative;
            border: 3px dashed rgba(255, 255, 255, 0.3);
            border-radius: 20px;
        }
    </style>
</head>
<body>
    <div id="score">Score: 0</div>
    <div id="gameArea">
        <button id="movingButton">Click Me!</button>
    </div>

    <script>
        const button = document.getElementById('movingButton');
        const scoreElement = document.getElementById('score');
        const gameArea = document.getElementById('gameArea');
        let score = 0;
        const colors = ['#800080', '#FF1493', '#FF4500', '#FFD700', '#32CD32', '#00CED1', '#9400D3'];
        let currentColorIndex = 0;
        
        button.addEventListener('mouseover', () => {
            const gameAreaRect = gameArea.getBoundingClientRect();
            const maxX = gameAreaRect.width - button.offsetWidth;
            const maxY = gameAreaRect.height - button.offsetHeight;
            
            // Reduce the movement area to 60% of the available space
            const randomX = Math.floor(Math.random() * maxX * 0.6);
            const randomY = Math.floor(Math.random() * maxY * 0.6);
            
            button.style.left = randomX + 'px';
            button.style.top = randomY + 'px';
        });

        button.addEventListener('click', () => {
            score++;
            scoreElement.textContent = `Score: ${score}`;
            
            // Change background color
            currentColorIndex = (currentColorIndex + 1) % colors.length;
            document.body.style.backgroundColor = colors[currentColorIndex];
            
            // Add a little animation to the button
            button.style.transform = 'scale(1.2)';
            setTimeout(() => {
                button.style.transform = 'scale(1)';
            }, 200);
        });

        // Initial position
        const gameAreaRect = gameArea.getBoundingClientRect();
        button.style.left = (gameAreaRect.width / 2 - button.offsetWidth / 2) + 'px';
        button.style.top = (gameAreaRect.height / 2 - button.offsetHeight / 2) + 'px';
    </script>
</body>
</html>
